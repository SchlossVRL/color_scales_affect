---
title: "color_scales_affect"
format: html
editor: visual
---

### Load packages

```{r}
# List of packages
packages <- c("corrr", "ggplot2", "lme4", "lmerTest", "FactoMineR", "grid","png","cowplot","magick", "ggimage","dplyr","tidyr")


```

```{r}

install_and_load_packages <- function(packages) {
  for(package in packages) {
    if(!require(package, character.only = TRUE)) {
      install.packages(package, dependencies = TRUE)
      library(package, character.only = TRUE)
    }
  }
}

# Call the function with the list of packages
install_and_load_packages(packages)

```

### Preprocessing

```{r}
current_dir<- getwd()
current_dir

data_dir <-paste0(current_dir,'/../data/')
data_dir

data_files <-list.files(path = data_dir, full.names = TRUE, pattern="*.csv")
data_files

df_list <- lapply(data_files, read.csv)

experiment_data_raw<- bind_rows(df_list)

ratings_trials<- experiment_data_raw %>% filter(trial_type== 'html-slider-response')

ratings_trials_exp<- ratings_trials %>% filter(practiceTrial != 'true')

nrow(ratings_trials_exp)

ratings_trials_exp$response<- as.numeric(ratings_trials_exp$response)
ratings_trials_exp$response<- (ratings_trials_exp$response + 200)/400
ratings_trial_grouped<- ratings_trials_exp %>% group_by(image_path, concept) %>%summarise(mean_rating = mean(response)) 

ratings_trials_grouped_wide<-ratings_trial_grouped %>%
  pivot_wider(names_from = concept, values_from = mean_rating)

```

### Plotting the mean associations

```{r}
# Function to read image and convert to grob
load_image <- function(path) {
  path<- paste0(current_dir,'/../',path)
  img <- readPNG(path)
  rasterGrob(img, interpolate = TRUE)
}

ratings_trial_grouped$x_position <- as.numeric(factor(ratings_trial_grouped$image_path))

p <- ggplot(ratings_trial_grouped, aes(x = x_position, y = mean_rating)) +
  geom_bar(stat='identity') +
  facet_wrap(~concept, scales = "free_x", ncol = 2) +
  # theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
   theme(axis.text.x =element_blank(),
        axis.title.x = element_blank()) +
  labs(y = "Mean Rating") +scale_y_continuous(limits = c(0, NA),expand = expansion(mult = c(0, .1)))

# Function to add images to the plot
add_images <- function(p, data) {
  image_height <- .2 # Adjust this value to change the height of the images
  p + annotation_custom(load_image(data$image_path),
                        xmin = data$x_position - 0.5,
                        xmax = data$x_position + 0.5,
                        ymin = -image_height, ymax = .24)
}


for (i in 1:nrow(ratings_trial_grouped)) {
  p <- add_images(p, ratings_trial_grouped[i, ])
}



# y_range <- range(ratings_trials_mean$mean_rating)
# y_padding <- diff(y_range) * 0.1  # Add 10% padding
# p <- p + coord_cartesian(ylim = c(y_range[1] - y_padding, y_range[2]))
ggsave("mean_ratings_color_scales_affect.png", plot = p, width = 8, height = 12, units = "in", dpi = 300)

```

### PCA

```{r}
pc <- prcomp(ratings_trials_grouped_wide[,-1],
             center = TRUE,
            scale. = TRUE)
attributes(pc)
print(pc)
```

```{r}
load_image_path<-function(path){
  return(paste0(current_dir,'/../',path))
}
image_paths<- sapply(ratings_trials_grouped_wide$image_path,load_image_path)
plot_df <- data.frame(
  PC1 = pc$x[, 1],
  PC2 = pc$x[, 2],
  image = image_paths
)
plot_df
ggplot(plot_df, aes(x = PC1, y = PC2)) +
  geom_image(aes(image = image), size = 0.05) +  # Adjust size as needed
  theme_minimal() +
  theme(axis.title = element_blank(),  # Optional: hide axis labels
        axis.text = element_blank(),
        axis.ticks = element_blank())
ggsave('pcaplot.pdf', height=13, width=13,units = "in", dpi = 300)
```
