---
title: "exp2"
format: html
editor: visual
---

### Load packages

```{r}
# List of packages
packages <- c("corrr", "ggplot2", "lme4", "lmerTest", "FactoMineR", "grid","png","cowplot","magick", "ggimage","dplyr","tidyverse","ggcorrplot","sjPlot")


```

```{r}

install_and_load_packages <- function(packages) {
  for(package in packages) {
    if(!require(package, character.only = TRUE)) {
      install.packages(package, dependencies = TRUE)
      library(package, character.only = TRUE)
    }
  }
}

# Call the function with the list of packages
install_and_load_packages(packages)

```

### Preprocessing

```{r}
### set the analysis dir as current_dir
analysis_dir<- getwd()

data_dir <-paste0(analysis_dir,'/../data/exp_1')
### if data_dir doesn't exist create it
if (!dir.exists(data_dir)) {
  dir.create(data_dir)
}

plot_dir <- paste0(analysis_dir,'/../plots')
### if plot_dir doesn't exist create it
if (!dir.exists(plot_dir)) {
  dir.create(plot_dir)
}

data_dir <-paste0(analysis_dir,'/../data/exp_2')
data_files <-list.files(path = data_dir, full.names = TRUE, pattern="*.csv")
print(paste0('we have data from ',length(data_files),' participants'))



df_list <- lapply(data_files, read.csv)

experiment_data_raw<- bind_rows(df_list)

### these are the ids for which we have 3 subjects per condition, so we exclude the last person
exclude_sub_ids<- c()


ratings_trials<- experiment_data_raw %>% filter(trial_type== 'html-slider-response')

ratings_trials_exp<- ratings_trials %>% filter(practiceTrial != 'true')
ratings_trials_exp<-ratings_trials_exp%>%filter(!subject_id%in%exclude_sub_ids)



# check for color vision

ratings_trials_exp$response<- as.numeric(ratings_trials_exp$response)
ratings_trials_exp$response<- (ratings_trials_exp$response + 200)/400

## check for within subject reliability
## TODO

### here we averagae over repetition
ratings_trial_grouped_subject<- ratings_trials_exp %>% group_by(subject_id, hue, saturation, lightness,concept,shift) %>%summarise(mean_rating = mean(response)) 


### here we average over subject
ratings_trial_grouped<- ratings_trial_grouped_subject %>% group_by( hue, saturation, lightness,shift,concept) %>%summarise(se_rating = sd(mean_rating)/sqrt(n()), mean_rating = mean(mean_rating)) 

ratings_trials_grouped_wide<-ratings_trial_grouped %>%select(-se_rating)%>%
  pivot_wider(names_from = concept, values_from = mean_rating)

ratings_trials_grouped_wide

subject_counts <- ratings_trials_exp %>%
  group_by(condition_num) %>%
  summarize(count = n_distinct(subject_id))

print(subject_counts)

```

### 

```{r}

pc_object_emotions<-  prcomp(t(ratings_trials_grouped_wide[,-c(1,2,3,4)]),
             center = TRUE,
            scale. = TRUE)

pc_object_maps<-  prcomp(ratings_trials_grouped_wide[,-c(1,2,3,4)],
             center = TRUE,
            scale. = TRUE)
pc_object_maps


```

```{r}
plot_df <- data.frame(
  PC1 = pc_object_emotions$x[, 1],
  PC2 = pc_object_emotions$x[, 2],
  PC3 = pc_object_emotions$x[, 3],
  emotion = colnames(ratings_trials_grouped_wide)[5:ncol(ratings_trials_grouped_wide)]
)
rownames(plot_df)<- seq(1,4)

p <- ggplot(plot_df, aes(x = PC2, y = PC1)) + 
  geom_point(color = 'black') +
  geom_text(aes(label = emotion), vjust = 1, hjust = 2, size = 5, color = 'black') +  # Annotate with filenames
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +  # Horizontal line at y=0
  geom_vline(xintercept = 0, linetype = "dashed", color = "red") +  # Vertical line at x=
  scale_y_continuous(limits = c(-6, 6)) +
  scale_x_continuous(limits = c(-6, 6))+
  labs(x = "PC2", y="PC1")+
  theme_classic()+
  theme(axis.text.x = element_text(size = 15),
        axis.text.y = element_text(size = 15) )


p
ggsave(paste0(plot_dir,'/exp2_emotion_PCA.pdf'), plot = p, dpi = 300, height = 8, width = 8)
```

```{r}
load_image_path<-function(path){
  shift <- strsplit(path,"_")[[1]][4]
  fname <- paste0(analysis_dir,'/../images/',strsplit(path,"_")[[1]][1],"_",strsplit(path,"_")[[1]][2],"_",strsplit(path,"_")[[1]][3],"_2_",shift,".png")
  return(fname)
}


plot_df <- data.frame(
  PC1 = pc_object_maps$x[, 1],
  PC2 = pc_object_maps$x[, 2],
  PC3 = pc_object_maps$x[, 3],
  map = paste(ratings_trials_grouped_wide$hue,ratings_trials_grouped_wide$lightness, ratings_trials_grouped_wide$saturation,ratings_trials_grouped_wide$shift, sep = "_")
)
rownames(plot_df)<- seq(1,32)
plot_df$image<- sapply(plot_df$map,load_image_path)

p <- ggplot(plot_df, aes(x = PC2, y = PC1)) + 
  geom_point(color = 'black') +
  # geom_text(aes(label = map), vjust = 1, hjust = 1, size = 5, color = 'black') +  # Annotate with filenames
   geom_image(aes(image = image), size = 0.05) +  # Adjust size as needed
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +  # Horizontal line at y=0
  geom_vline(xintercept = 0, linetype = "dashed", color = "red") +  # Vertical line at x=
  scale_y_continuous(limits = c(-6, 6)) +
  scale_x_continuous(limits = c(-6, 6))+
  labs(x = "PC1", y="PC2")+
  theme_classic()+
  theme(axis.text.x = element_text(size = 15),
        axis.text.y = element_text(size = 15) )

  

p

ggsave(paste0(plot_dir,'exp2_colored_map_PCA.pdf'), dpi=300, height = 7, width=7,plot=p)
```

```{r}
ratings_trial_grouped <- 
  ratings_trial_grouped %>% 
  mutate(
    saturation_numeric = case_when(
      saturation == 'S' ~ 1,
      saturation == 'U' ~ -1,
      TRUE ~ NA_real_  # Use NA_real_ for numeric NA
    ),
    lightness_numeric = case_when(
      lightness == 'L' ~ -1,
      lightness == 'D' ~ 1,
      TRUE ~ NA_real_  # Use NA_real_ for numeric NA
    ),
    RG_numeric = case_when(
      hue == 'R' ~ 1,
      hue == 'G' ~ -1,
      hue %in% c('B', 'Y') ~ 0,
      TRUE ~ NA_real_  # Use NA_real_ for numeric NA
    ),
    BY_numeric = case_when(
      hue == 'B' ~ 1,
      hue == 'Y' ~ -1,
      hue %in% c('R', 'G') ~ 0,
      TRUE ~ NA_real_  # Use NA_real_ for numeric NA
    ),
    shift_numeric = case_when(
      shift == 'darkshift' ~ 1,
      shift == 'lightshift' ~ -1,
      TRUE ~ NA_real_  # Use NA_real_ for numeric NA
    ),
  )

```

```{r}
ratings_trial_grouped
```

```{r}

  

hue_colors<-c('#fc0303','#f2eb0c','#00e357','#032cfc',"white")

condition_colors = c("#005ddf","#00b3ff","#00588d","#3baeea","#00675b","#00c6b1","#005f5a","#00b9b0","#be004f","#ff31a3","#8d2449","#ef7f9c","#3f3c00","#beb600","#3e3b04","#bbb379")

ratings_trial_grouped$lightsat<-paste(ratings_trial_grouped$lightness, ratings_trial_grouped$saturation, sep = "_")
ratings_trial_grouped$hue<- factor(ratings_trial_grouped$hue, levels = c("R","Y","G","B"))
ratings_trial_grouped$light_sat_hue<-paste(ratings_trial_grouped$lightsat, ratings_trial_grouped$hue, sep = "_")
ratings_trial_grouped$light_sat_hue<-factor(ratings_trial_grouped$light_sat_hue, levels= c("D_S_B", "L_S_B", "D_U_B", "L_U_B", "D_S_G", "L_S_G", "D_U_G", "L_U_G", "D_S_R", "L_S_R", "D_U_R", "L_U_R", "D_S_Y", "L_S_Y", "D_U_Y", "L_U_Y"))
ratings_trial_grouped$shift<-factor(ratings_trial_grouped$shift, levels = c("lightshift","darkshift"))
ratings_trial_grouped$concept<-factor(ratings_trial_grouped$concept, levels = c("positive","negative","calm","startling"))

p <- ggplot(ratings_trial_grouped, aes(x = hue, y = mean_rating, group = interaction(lightsat, shift), shape = factor(shift))) + 
  geom_line(aes(colour = factor(lightness_numeric, levels = c(1, -1)),  
                linetype = factor(saturation_numeric, levels = c(1, -1))),  
            size = 0.5) +
  geom_errorbar(aes(ymin = mean_rating - se_rating, ymax = mean_rating + se_rating),  # Add error bars
                width = 0.2, color = "black", linewidth = 0.3) + 
  geom_point(aes(shape = lightsat, fill = light_sat_hue), stroke=NA, size=2.5) +
  geom_hline(yintercept = c(0.25, 0.5, 0.75), linetype = "solid", color = "gray70", size = 0.3) +  # Add horizontal lines
  facet_grid(concept ~ shift, scales = "free") +  
  theme(axis.title.x = element_blank(),
        axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
  labs(y = "Mean Rating") +
  scale_y_continuous(limits = c(0, 1), expand = expansion(mult = c(0, 0))) +  # Set y-axis limits exactly from 0 to 1
  scale_colour_grey(name = "Lightness/Saturation", guide = "none") +
  scale_fill_manual(values = condition_colors, guide = "none") +
  scale_shape_manual(name = "Lightness/Saturation", 
                     values = c("D_S" = 22, "L_S" = 21, "L_U" = 24, "D_U" = 23), guide = "none") +
  scale_linetype_discrete(name = "Saturation", guide = "none") +  
  theme_classic() +
  theme(
    axis.title.x = element_blank(),
    panel.border = element_rect(colour = "black", fill = NA, linewidth = .5),  # Add border around each facet
    strip.background = element_rect(colour = "black", fill = "white"),  # Add background to facet labels
    panel.spacing.y = unit(1, "lines")  # Increase space between rows
  ) 

p
ggsave(paste0(plot_dir,'/exp2_facet_emotion_ratings.pdf'), dpi=300, height = 8, width=5,plot=p)

```

```{r}

```


### Linear Regression Models
```{r}
d<- ratings_trial_grouped%>%filter(concept=='positive')
m1<-lm(mean_rating~ (RG_numeric+BY_numeric)*(lightness_numeric*saturation_numeric*shift_numeric), data =d)
summary(m1)
```

```{r}
d<- ratings_trial_grouped%>%filter(concept=='negative')
m1<-lm(mean_rating~ (RG_numeric+BY_numeric)*(lightness_numeric*saturation_numeric*shift_numeric), data =d)
summary(m1)
```

```{r}
d<- ratings_trial_grouped%>%filter(concept=='calm')
m1<-lm(mean_rating~ (RG_numeric+BY_numeric)*(lightness_numeric*saturation_numeric*shift_numeric), data =d)
summary(m1)
```

```{r}
d<- ratings_trial_grouped%>%filter(concept=='startling')
m1<-lm(mean_rating~ (RG_numeric+BY_numeric)*(lightness_numeric*saturation_numeric*shift_numeric), data =d)
summary(m1)
```

## Mixed Effects Models

```{r}



ratings_trials_exp <- 
  ratings_trials_exp %>% 
  mutate(
    saturation_numeric = case_when(
      saturation == 'S' ~ 1,
      saturation == 'U' ~ -1,
      TRUE ~ NA_real_  # Use NA_real_ for numeric NA
    ),
    lightness_numeric = case_when(
      lightness == 'L' ~ 1,
      lightness == 'D' ~ -1,
      TRUE ~ NA_real_  # Use NA_real_ for numeric NA
    ),
    RG_numeric = case_when(
      hue == 'R' ~ 1,
      hue == 'G' ~ -1,
      hue %in% c('B', 'Y') ~ 0,
      TRUE ~ NA_real_  # Use NA_real_ for numeric NA
    ),
    BY_numeric = case_when(
      hue == 'B' ~ 1,
      hue == 'Y' ~ -1,
      hue %in% c('R', 'G') ~ 0,
      TRUE ~ NA_real_  # Use NA_real_ for numeric NA
    ),
    shift_numeric = case_when(
      shift == 'darkshift' ~ -1,
      shift == 'lightshift' ~ 1,
      TRUE ~ NA_real_  # Use NA_real_ for numeric NA
    ),
  )
```

```{r}

ctrl <- lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=5e5))

d<- ratings_trials_exp%>%filter(concept=='positive')
m_positive<-lmer(response~ (RG_numeric+BY_numeric)*(lightness_numeric*saturation_numeric*shift_numeric) + (RG_numeric+BY_numeric+lightness_numeric+saturation_numeric+shift_numeric||subject_id), data =d, control=ctrl)

tab_model(m_positive,p.val = "kr", show.df = TRUE,file='positive_lmer_results.html')
summary(m_positive)
```

```{r}

d<- ratings_trials_exp%>%filter(concept=='negative')

m_negative<-lmer(response~ (RG_numeric+BY_numeric)*(lightness_numeric*saturation_numeric*shift_numeric) + (RG_numeric+BY_numeric+lightness_numeric+saturation_numeric+shift_numeric||subject_id), data =d, control=ctrl)

tab_model(m_negative,p.val = "kr", show.df = TRUE,file='negative_lmer_results.html')
summary(m_negative)
```

```{r}
d<- ratings_trials_exp%>%filter(concept=='calm')

m_calm<-lmer(response~ (RG_numeric+BY_numeric)*(lightness_numeric*saturation_numeric*shift_numeric) + (RG_numeric+BY_numeric+lightness_numeric+saturation_numeric+shift_numeric||subject_id), data =d, control=ctrl)

tab_model(m_calm,p.val = "kr", show.df = TRUE,file='calm_lmer_results.html')
summary(m_calm)

```

```{r}
d<- ratings_trials_exp%>%filter(concept=='startling')

m_startling<-lmer(response~ (RG_numeric+BY_numeric)*(lightness_numeric*saturation_numeric*shift_numeric) + (RG_numeric+BY_numeric+lightness_numeric+saturation_numeric+shift_numeric||subject_id), data =d, control=ctrl)

tab_model(m_startling,p.val = "kr", show.df = TRUE,file='startling_lmer_results.html')
summary(m_startling)
```

```{r}
d<- ratings_trials_exp%>%filter(concept=='calm')

m_calm<-lmer(response~ (RG_numeric+BY_numeric)*(lightness_numeric*saturation_numeric*shift_numeric) + (RG_numeric+BY_numeric+lightness_numeric+saturation_numeric+shift_numeric||subject_id), data =d, control=ctrl)

tab_model(m_calm,p.val = "kr", show.df = TRUE,file='calm_lmer_results.html')
```

```{r}

```

```{r}
for(this_concept in c('positive','negative','calm','startling')){
  d<- ratings_trials_exp%>%filter(concept==this_concept)
  # Process the data
  d <- d %>%
    mutate(
      lightness_numeric = case_when(
        lightness_numeric == -1 ~ "dark",
        lightness_numeric == 1 ~ "light",
        TRUE ~ as.character(lightness_numeric)
      ),
      saturation_numeric = case_when(
        saturation_numeric == -1 ~ "unsaturated",
        saturation_numeric == 1 ~ "saturated",
        TRUE ~ as.character(saturation_numeric)
      ),
      shift_numeric = case_when(
        shift_numeric == -1 ~ "darkshift",
        shift_numeric == 1 ~ "lightshift",
        TRUE ~ as.character(shift_numeric)
      )
    ) %>%
    group_by(lightness_numeric, saturation_numeric, shift_numeric) %>%
    summarize(
      mean_rating = mean(response),
      se_rating = sd(response) / sqrt(n())
    )
  
  # Create the plot
  p <- ggplot(d, aes(
    x = factor(lightness_numeric, levels = c("dark", "light")),
    y = mean_rating,
    color = factor(shift_numeric, levels = c("darkshift", "lightshift")),
    group = shift_numeric
  )) +
    geom_line(position = position_dodge(0.)) +
    geom_point(size = 3, position = position_dodge(0.)) +
    geom_errorbar(aes(
      ymin = mean_rating - se_rating,
      ymax = mean_rating + se_rating
    ),
    position = position_dodge(0.),
    width = 0.2
    ) +
    facet_wrap(~factor(saturation_numeric, levels = c("unsaturated", "saturated"))) +
    labs(
      title = this_concept,
      x = "Lightness",
      y = "Mean Rating",
      color = "Shift"
    ) +
  scale_y_continuous(limits = c(0, .8), expand = expansion(mult = c(0, .1))) +
    theme_classic()
  
ggsave(
    filename = paste0(plot_dir,"/", this_concept, ".pdf"),  # Correct string formatting for R
    plot = p,
    width = 8,  # Adjust width as needed
    height = 6  # Adjust height as needed
  )
}
# 
# d<- ratings_trials_exp%>%filter(concept=='positive')
# d %>%
#   mutate(
#     lightness_numeric = case_when(
#       lightness_numeric == -1 ~ "dark",
#       lightness_numeric == 1 ~ "light",
#       TRUE ~ as.character(lightness_numeric)
#     ),
#     saturation_numeric = case_when(
#       saturation_numeric == -1 ~ "unsaturated",
#       saturation_numeric == 1 ~ "saturated",
#       TRUE ~ as.character(saturation_numeric)
#     ),
#     shift_numeric = case_when(
#       shift_numeric == -1 ~ "darkshift",
#       shift_numeric == 1 ~ "lightshift",
#       TRUE ~ as.character(shift_numeric)
#     )
#   ) %>%
#   group_by(lightness_numeric, saturation_numeric, shift_numeric) %>%
#   summarize(
#     mean_rating = mean(response),
#     se_rating = sd(response) / sqrt(n())
#   ) %>%
#   ggplot(aes(
#     x = factor(lightness_numeric, levels = c("dark", "light")),
#     y = mean_rating,
#     color = factor(shift_numeric, levels = c("darkshift", "lightshift")),
#     group = shift_numeric
#   )) +
#   geom_line(position = position_dodge(0.)) +
#   geom_point(size = 3, position = position_dodge(0.)) +
#   geom_errorbar(aes(
#     ymin = mean_rating - se_rating,
#     ymax = mean_rating + se_rating
#   ),
#   position = position_dodge(0.),
#   width = 0.2
#   ) +
#   facet_wrap(~factor(saturation_numeric, levels = c("unsaturated", "saturated"))) +
#   labs(
#     title='Positive',
#     x = "Lightness",
#     y = "Mean Rating",
#     color = "Shift"
#   ) +
#   theme_classic()



```

```{r}

d<- ratings_trials_exp%>%filter(concept=='positive')
d %>%
  mutate(
    lightness_numeric = case_when(
      lightness_numeric == -1 ~ "dark",
      lightness_numeric == 1 ~ "light",
      TRUE ~ as.character(lightness_numeric)
    ),
    saturation_numeric = case_when(
      saturation_numeric == -1 ~ "unsaturated",
      saturation_numeric == 1 ~ "saturated",
      TRUE ~ as.character(saturation_numeric)
    ),
    shift_numeric = case_when(
      shift_numeric == -1 ~ "darkshift",
      shift_numeric == 1 ~ "lightshift",
      TRUE ~ as.character(shift_numeric)
    )
  ) %>%
  group_by(lightness_numeric, saturation_numeric, shift_numeric) %>%
  summarize(
    mean_rating = mean(response),
    se_rating = sd(response) / sqrt(n())
  ) %>%
  ggplot(aes(
    x = factor(lightness_numeric, levels = c("dark", "light")),
    y = mean_rating,
    color = factor(shift_numeric, levels = c("darkshift", "lightshift")),
    group = shift_numeric
  )) +
  geom_line(position = position_dodge(0.)) +
  geom_point(size = 3, position = position_dodge(0.)) +
  geom_errorbar(aes(
    ymin = mean_rating - se_rating,
    ymax = mean_rating + se_rating
  ),
  position = position_dodge(0.),
  width = 0.2
  ) +
  scale_y_continuous(limits = c(0, 1), expand = expansion(mult = c(0, .1))) +
  facet_wrap(~factor(saturation_numeric, levels = c("unsaturated", "saturated"))) +
  labs(
    title='Calm',
    x = "Lightness",
    y = "Mean Rating",
    color = "Shift"
  ) +
  theme_classic()


```
